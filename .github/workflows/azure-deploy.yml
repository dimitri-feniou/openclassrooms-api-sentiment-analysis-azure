name: Test and Deploy API Sentiment Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code source
      - name: Checkout Code
        uses: actions/checkout@v3

      # Étape 2 : Liste des fichiers pour vérification
      - name: List Repository Files
        run: ls -al

      # Étape 3 : Configuration de Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Étape 4 : Création et activation d'un environnement virtuel pour les tests
      - name: Create Virtual Environment for Tests
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip

      # Étape 5 : Installation des dépendances pour les tests
      - name: Install Test Dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements-test.txt
          pip install joblib scikit-learn

      # Étape 6 : Vérification des modèles et fichiers nécessaires
      - name: Verify Models
        run: |
          test -f models/pca_model.pkl || (echo "PCA model file is missing!" && exit 1)
          test -d models/mlflow_model || (echo "MLflow model folder is missing!" && exit 1)

      # Étape 7 : Exécution des tests unitaires
      - name: Run Tests
        run: |
          source venv/bin/activate
          pytest tests/ --maxfail=5 --disable-warnings

      # Étape 8 : Nettoyage des fichiers temporaires
      - name: Clean Temporary Files
        run: |
          find . -name "__pycache__" -exec rm -rf {} +
          find . -name "*.pyc" -exec rm -rf {} +
          find . -name "*.pyo" -exec rm -rf {} +
          rm -rf venv

      # Étape 9 : Création d'un nouvel environnement virtuel pour le déploiement
      - name: Create Deployment Virtual Environment (antenv)
        run: |
          python -m venv antenv
          source antenv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Étape 10 : Déploiement sur Azure App Service
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: "openclassrooms-sentiment-analysis-api"
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./app_deployment.zip
