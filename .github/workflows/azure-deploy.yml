name: Test and Deploy API Sentiment Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PYTHON_VERSION: "3.10"
  AZURE_WEBAPP_NAME: "openclassrooms-sentiment-analysis-api"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and activate test environment
        run: |
          python -m venv .venv-test
          source .venv-test/bin/activate
          python -m pip install --upgrade pip

      - name: Install test dependencies
        run: |
          source .venv-test/bin/activate
          pip install -r requirements-test.txt

      - name: Run Tests
        run: |
          source .venv-test/bin/activate
          python -m pytest tests/ -v

      - name: Cleanup test environment
        run: |
          rm -rf .venv-test

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create deployment directory
        run: |
          mkdir deploy
          cp -r app models run.py requirements.txt  runtime.txt deploy/
          cd deploy
          python -m venv antenv
          source antenv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Clean and prepare files
        run: |
          cd deploy
          find . -type d -name "__pycache__" -exec rm -rf {} +
          find . -type f -name "*.pyc" -delete
          find . -type f -name "*.pyo" -delete
          find . -type d -name ".pytest_cache" -exec rm -rf {} +
          find . -type d -name "__pycache__" -exec rm -rf {} +

      - name: Create deployment package
        run: |
          cd deploy
          zip -r ../app_deployment.zip ./*

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: app_deployment.zip
